name: Process UCMR5 Data

on:
  push:
    branches: [ main ]
    paths:
      - 'UCMR5_*.txt'
      - 'scripts/convert-to-sqlite.js'
      - '.github/workflows/process-data.yml'
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'  # Run monthly on the 1st

jobs:
  convert-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download UCMR5 data
      run: node scripts/download-data.js
      env:
        DATA_CDN_URL: ${{ secrets.DATA_CDN_URL }}
    
    - name: Convert data to SQLite
      run: node scripts/convert-to-sqlite.js
    
    - name: Compress database
      run: |
        gzip -9 -c ucmr5-data.db > ucmr5-data.db.gz
        ls -lh ucmr5-data.db*
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: data-${{ github.run_number }}
        release_name: UCMR5 Data Release ${{ github.run_number }}
        body: |
          Automated data release from UCMR5 source files.
          
          **Database Statistics:**
          - Compressed size: $(ls -lh ucmr5-data.db.gz | awk '{print $5}')
          - Generated on: $(date -u)
          
          **Changes:**
          - ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    
    - name: Upload Database Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ucmr5-data.db.gz
        asset_name: ucmr5-data.db.gz
        asset_content_type: application/gzip
    
    - name: Update Latest Release
      run: |
        # Delete previous 'latest' release if exists
        gh release delete latest -y || true
        
        # Create new 'latest' release pointing to current data
        gh release create latest ucmr5-data.db.gz \
          --title "Latest UCMR5 Data" \
          --notes "Always points to the most recent data release. Updated: $(date -u)" \
          --latest
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Trigger Vercel Deployment
      if: success()
      run: |
        curl -X POST ${{ secrets.VERCEL_DEPLOY_HOOK }}